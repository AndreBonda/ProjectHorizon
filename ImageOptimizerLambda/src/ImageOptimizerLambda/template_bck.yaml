---
AWSTemplateFormatVersion: '2010-09-09'
Description: An application to process and transform images effortlessly in the cloud
Resources:
  
  # Lambda IAM Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
  
  # Lambda Function
  ImageOptimizerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ImageOptimizer
      Runtime: dotnet8
      Handler: ImageOptimizerLambda::ImageOptimizerLambda.Functions_FunctionHandlerAsync_Generated::FunctionHandlerAsync
      Code:
        S3Bucket: !Sub "${AWS::AccountId}-deployment-bucket"
        S3Key: "lambda-deployment.zip"
      MemorySize: 512
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Environment:
        Variables:
          S3_SOURCE_BUCKET_NAME: !Sub "${AWS::AccountId}-source-bucket"
          S3_DESTINATION_BUCKET_NAME: !Sub "${AWS::AccountId}-destination-bucket"
  
  # Permission for S3 to invoke Lambda
  S3InvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ImageOptimizerLambda
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub "${S3SourceBucket}/*"
  
  # S3 Source Bucket
  S3SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::AccountId}-source-bucket"
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt ImageOptimizerLambda.Arn
  
  # S3 Destination Bucket
  S3DestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::AccountId}-destination-bucket"